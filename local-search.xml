<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Ethernaut题解-01.Fallback</title>
    <link href="/2022/06/15/Ethernaut%E9%A2%98%E8%A7%A3-01-Fallback/"/>
    <url>/2022/06/15/Ethernaut%E9%A2%98%E8%A7%A3-01-Fallback/</url>
    
    <content type="html"><![CDATA[<h3 id="Fallback"><a href="#Fallback" class="headerlink" title="Fallback"></a>Fallback</h3><p>目标: 获取合约的owner权限, 并将合约余额减到0</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">// SPDX-License-Identifier: MIT<br>pragma solidity ^<span class="hljs-number">0.6</span><span class="hljs-number">.0</span>;<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;@openzeppelin/contracts/math/SafeMath.sol&#x27;</span>;<br><br>contract Fallback &#123;<br><br>  <span class="hljs-keyword">using</span> SafeMath <span class="hljs-keyword">for</span> uint256;<br>  <span class="hljs-keyword">mapping</span>(address =&gt; uint) <span class="hljs-built_in">public</span> contributions;<br>  address payable <span class="hljs-built_in">public</span> <span class="hljs-keyword">owner</span>;<br><br>  constructor() <span class="hljs-built_in">public</span> &#123;<br>    owner = msg.sender;<br>    contributions[msg.sender] = <span class="hljs-number">1000</span> * (<span class="hljs-number">1</span> ether);<br>  &#125;<br><br>  modifier onlyOwner &#123;<br>        require(<br>            msg.sender == <span class="hljs-keyword">owner</span>,<br>            &quot;caller is not the owner&quot;<br>        );<br>        _;<br>    &#125;<br><br>  <span class="hljs-keyword">function</span> contribute() <span class="hljs-built_in">public</span> payable &#123;<br>    require(msg.<span class="hljs-keyword">value</span> &lt; <span class="hljs-number">0.001</span> ether);<br>    contributions[msg.sender] += msg.<span class="hljs-keyword">value</span>;<br>    <span class="hljs-keyword">if</span>(contributions[msg.sender] &gt; contributions[<span class="hljs-keyword">owner</span>]) &#123;<br>      owner = msg.sender;<br>    &#125;<br>  &#125;<br><br>  <span class="hljs-keyword">function</span> getContribution() <span class="hljs-built_in">public</span> <span class="hljs-keyword">view</span> <span class="hljs-keyword">returns</span> (uint) &#123;<br>    <span class="hljs-keyword">return</span> contributions[msg.sender];<br>  &#125;<br><br>  <span class="hljs-keyword">function</span> withdraw() <span class="hljs-built_in">public</span> onlyOwner &#123;<br>    <span class="hljs-keyword">owner</span>.transfer(address(this).balance);<br>  &#125;<br><br>  receive() <span class="hljs-keyword">external</span> payable &#123;<br>    require(msg.<span class="hljs-keyword">value</span> &gt; <span class="hljs-number">0</span> &amp;&amp; contributions[msg.sender] &gt; <span class="hljs-number">0</span>); // 满足该条件即可获得<span class="hljs-keyword">owner</span>权限<br>    owner = msg.sender;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>解题思路就是获取owner权限后, 调用withdraw方法使合约余额减到0.</p><p>最核心的是先获取owner权限, 需要先调用<code>contribute()</code>同时发送一些eth使<code>contributions[msg.sender] &gt; 0</code>条件满足, 然后再向合约转账即可取得owner权限. </p><p>用到的知识点是: 当本合约收到ether但并未被调用任何函数，未接受任何数据，receive函数被触发, 该函数不能有参数和返回值，需设置为external，payable.</p><p>达成该功能还可以使用fallback方法, 当本合约的其他函数不匹配调用，或调用者未提供任何信息，且没有receive函数，fallback函数被触发.</p><p>具体文档可见<a href="https://docs.soliditylang.org/en/v0.8.15/contracts.html#receive-ether-function">官方文档</a>.</p>]]></content>
    
    
    <categories>
      
      <category>Ethernaut题解</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Solidity</tag>
      
      <tag>Ethernaut</tag>
      
      <tag>Ethereum</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
